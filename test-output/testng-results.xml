<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="5" total="11" passed="6">
  <reporter-output>
  </reporter-output>
  <suite name="All Test Suite" duration-ms="14430" started-at="2022-09-30T16:39:09 EET" finished-at="2022-09-30T16:39:23 EET">
    <groups>
    </groups>
    <test name="F:/PhysicianNetwork/PhysicianNetwork" duration-ms="14430" started-at="2022-09-30T16:39:09 EET" finished-at="2022-09-30T16:39:23 EET">
      <class name="Tests.Login.LoginWithInvalidEmailTest">
        <test-method status="PASS" signature="start()[pri:0, instance:Tests.Login.LoginWithInvalidEmailTest@35d176f7]" name="start" is-config="true" duration-ms="6507" started-at="2022-09-30T16:39:02 EET" finished-at="2022-09-30T16:39:09 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- start -->
        <test-method status="PASS" signature="userCanNotLoginWithInvalidEmail()[pri:0, instance:Tests.Login.LoginWithInvalidEmailTest@35d176f7]" name="userCanNotLoginWithInvalidEmail" duration-ms="1214" started-at="2022-09-30T16:39:09 EET" finished-at="2022-09-30T16:39:10 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userCanNotLoginWithInvalidEmail -->
        <test-method status="PASS" signature="screenshotOnFailure(org.testng.ITestResult)[pri:0, instance:Tests.Login.LoginWithInvalidEmailTest@35d176f7]" name="screenshotOnFailure" is-config="true" duration-ms="5" started-at="2022-09-30T16:39:10 EET" finished-at="2022-09-30T16:39:10 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userCanNotLoginWithInvalidEmail status=SUCCESS method=LoginWithInvalidEmailTest.userCanNotLoginWithInvalidEmail()[pri:0, instance:Tests.Login.LoginWithInvalidEmailTest@35d176f7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotOnFailure -->
      </class> <!-- Tests.Login.LoginWithInvalidEmailTest -->
      <class name="Tests.Registration.RegistrationWithExistedPhoneNumberTest">
        <test-method status="PASS" signature="userCanRegisterSuccessfully()[pri:0, instance:Tests.Registration.RegistrationWithExistedPhoneNumberTest@22a67b4]" name="userCanRegisterSuccessfully" duration-ms="3800" started-at="2022-09-30T16:39:15 EET" finished-at="2022-09-30T16:39:19 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userCanRegisterSuccessfully -->
        <test-method status="PASS" signature="screenshotOnFailure(org.testng.ITestResult)[pri:0, instance:Tests.Registration.RegistrationWithExistedPhoneNumberTest@22a67b4]" name="screenshotOnFailure" is-config="true" duration-ms="1" started-at="2022-09-30T16:39:19 EET" finished-at="2022-09-30T16:39:19 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userCanRegisterSuccessfully status=SUCCESS method=RegistrationWithExistedPhoneNumberTest.userCanRegisterSuccessfully()[pri:0, instance:Tests.Registration.RegistrationWithExistedPhoneNumberTest@22a67b4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotOnFailure -->
      </class> <!-- Tests.Registration.RegistrationWithExistedPhoneNumberTest -->
      <class name="Tests.Login.LoginWithInvalidPassTest">
        <test-method status="PASS" signature="userCanNotLoginWithInvalidEmail()[pri:0, instance:Tests.Login.LoginWithInvalidPassTest@3d99d22e]" name="userCanNotLoginWithInvalidEmail" duration-ms="819" started-at="2022-09-30T16:39:10 EET" finished-at="2022-09-30T16:39:11 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userCanNotLoginWithInvalidEmail -->
        <test-method status="PASS" signature="screenshotOnFailure(org.testng.ITestResult)[pri:0, instance:Tests.Login.LoginWithInvalidPassTest@3d99d22e]" name="screenshotOnFailure" is-config="true" duration-ms="1" started-at="2022-09-30T16:39:11 EET" finished-at="2022-09-30T16:39:11 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userCanNotLoginWithInvalidEmail status=SUCCESS method=LoginWithInvalidPassTest.userCanNotLoginWithInvalidEmail()[pri:0, instance:Tests.Login.LoginWithInvalidPassTest@3d99d22e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotOnFailure -->
      </class> <!-- Tests.Login.LoginWithInvalidPassTest -->
      <class name="Tests.Registration.RegistrationWithExistedEmailTest">
        <test-method status="PASS" signature="userCanRegisterSuccessfully()[pri:0, instance:Tests.Registration.RegistrationWithExistedEmailTest@79be0360]" name="userCanRegisterSuccessfully" duration-ms="4418" started-at="2022-09-30T16:39:11 EET" finished-at="2022-09-30T16:39:15 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userCanRegisterSuccessfully -->
        <test-method status="PASS" signature="screenshotOnFailure(org.testng.ITestResult)[pri:0, instance:Tests.Registration.RegistrationWithExistedEmailTest@79be0360]" name="screenshotOnFailure" is-config="true" duration-ms="1" started-at="2022-09-30T16:39:15 EET" finished-at="2022-09-30T16:39:15 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userCanRegisterSuccessfully status=SUCCESS method=RegistrationWithExistedEmailTest.userCanRegisterSuccessfully()[pri:0, instance:Tests.Registration.RegistrationWithExistedEmailTest@79be0360] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotOnFailure -->
      </class> <!-- Tests.Registration.RegistrationWithExistedEmailTest -->
      <class name="Tests.Registration.RegistrationSuccessfullyTest">
        <test-method status="PASS" signature="userCanRegisterSuccessfully()[pri:0, instance:Tests.Registration.RegistrationSuccessfullyTest@57855c9a]" name="userCanRegisterSuccessfully" duration-ms="3631" started-at="2022-09-30T16:39:19 EET" finished-at="2022-09-30T16:39:23 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userCanRegisterSuccessfully -->
        <test-method status="PASS" signature="screenshotOnFailure(org.testng.ITestResult)[pri:0, instance:Tests.Registration.RegistrationSuccessfullyTest@57855c9a]" name="screenshotOnFailure" is-config="true" duration-ms="1" started-at="2022-09-30T16:39:23 EET" finished-at="2022-09-30T16:39:23 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userCanRegisterSuccessfully status=SUCCESS method=RegistrationSuccessfullyTest.userCanRegisterSuccessfully()[pri:0, instance:Tests.Registration.RegistrationSuccessfullyTest@57855c9a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotOnFailure -->
      </class> <!-- Tests.Registration.RegistrationSuccessfullyTest -->
      <class name="Tests.Login.LoginSuccessfullyTest">
        <test-method status="PASS" signature="userCanLoginWithValidEmailAndPassword()[pri:0, instance:Tests.Login.LoginSuccessfullyTest@3b084709]" name="userCanLoginWithValidEmailAndPassword" duration-ms="453" started-at="2022-09-30T16:39:23 EET" finished-at="2022-09-30T16:39:23 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userCanLoginWithValidEmailAndPassword -->
        <test-method status="PASS" signature="screenshotOnFailure(org.testng.ITestResult)[pri:0, instance:Tests.Login.LoginSuccessfullyTest@3b084709]" name="screenshotOnFailure" is-config="true" duration-ms="0" started-at="2022-09-30T16:39:23 EET" finished-at="2022-09-30T16:39:23 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userCanLoginWithValidEmailAndPassword status=SUCCESS method=LoginSuccessfullyTest.userCanLoginWithValidEmailAndPassword()[pri:0, instance:Tests.Login.LoginSuccessfullyTest@3b084709] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotOnFailure -->
      </class> <!-- Tests.Login.LoginSuccessfullyTest -->
    </test> <!-- F:/PhysicianNetwork/PhysicianNetwork -->
  </suite> <!-- All Test Suite -->
</testng-results>
