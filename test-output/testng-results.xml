<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="2" total="5" passed="3">
  <reporter-output>
  </reporter-output>
  <suite name="All Test Suite" duration-ms="8656" started-at="2022-11-06T17:56:03 EET" finished-at="2022-11-06T17:56:11 EET">
    <groups>
    </groups>
    <test name="F:/PhysicianNetwork/PhysicianNetwork" duration-ms="8656" started-at="2022-11-06T17:56:03 EET" finished-at="2022-11-06T17:56:11 EET">
      <class name="Tests.Registration.RegistrationWithExistedEmailTest">
        <test-method status="PASS" signature="start()[pri:0, instance:Tests.Registration.RegistrationWithExistedEmailTest@1c3a4799]" name="start" is-config="true" duration-ms="4213" started-at="2022-11-06T17:55:59 EET" finished-at="2022-11-06T17:56:03 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- start -->
        <test-method status="PASS" signature="userCanNotRegisterWithExistedEmail()[pri:0, instance:Tests.Registration.RegistrationWithExistedEmailTest@1c3a4799]" name="userCanNotRegisterWithExistedEmail" duration-ms="4477" started-at="2022-11-06T17:56:03 EET" finished-at="2022-11-06T17:56:07 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userCanNotRegisterWithExistedEmail -->
        <test-method status="PASS" signature="screenshotOnFailure(org.testng.ITestResult)[pri:0, instance:Tests.Registration.RegistrationWithExistedEmailTest@1c3a4799]" name="screenshotOnFailure" is-config="true" duration-ms="2" started-at="2022-11-06T17:56:07 EET" finished-at="2022-11-06T17:56:07 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userCanNotRegisterWithExistedEmail status=SUCCESS method=RegistrationWithExistedEmailTest.userCanNotRegisterWithExistedEmail()[pri:0, instance:Tests.Registration.RegistrationWithExistedEmailTest@1c3a4799] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotOnFailure -->
      </class> <!-- Tests.Registration.RegistrationWithExistedEmailTest -->
      <class name="Tests.Registration.RegistrationSuccessfullyTest">
        <test-method status="PASS" signature="userCanRegisterSuccessfully()[pri:0, instance:Tests.Registration.RegistrationSuccessfullyTest@51cdd8a]" name="userCanRegisterSuccessfully" duration-ms="4006" started-at="2022-11-06T17:56:07 EET" finished-at="2022-11-06T17:56:11 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userCanRegisterSuccessfully -->
        <test-method status="PASS" signature="screenshotOnFailure(org.testng.ITestResult)[pri:0, instance:Tests.Registration.RegistrationSuccessfullyTest@51cdd8a]" name="screenshotOnFailure" is-config="true" duration-ms="1" started-at="2022-11-06T17:56:11 EET" finished-at="2022-11-06T17:56:11 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userCanRegisterSuccessfully status=SUCCESS method=RegistrationSuccessfullyTest.userCanRegisterSuccessfully()[pri:0, instance:Tests.Registration.RegistrationSuccessfullyTest@51cdd8a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotOnFailure -->
      </class> <!-- Tests.Registration.RegistrationSuccessfullyTest -->
      <class name="Tests.Login.LoginSuccessfullyTest">
        <test-method status="PASS" signature="userCanLoginWithValidEmailAndPassword()[pri:0, instance:Tests.Login.LoginSuccessfullyTest@d44fc21]" name="userCanLoginWithValidEmailAndPassword" duration-ms="150" started-at="2022-11-06T17:56:11 EET" finished-at="2022-11-06T17:56:11 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userCanLoginWithValidEmailAndPassword -->
        <test-method status="PASS" signature="screenshotOnFailure(org.testng.ITestResult)[pri:0, instance:Tests.Login.LoginSuccessfullyTest@d44fc21]" name="screenshotOnFailure" is-config="true" duration-ms="0" started-at="2022-11-06T17:56:11 EET" finished-at="2022-11-06T17:56:11 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userCanLoginWithValidEmailAndPassword status=SUCCESS method=LoginSuccessfullyTest.userCanLoginWithValidEmailAndPassword()[pri:0, instance:Tests.Login.LoginSuccessfullyTest@d44fc21] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotOnFailure -->
      </class> <!-- Tests.Login.LoginSuccessfullyTest -->
    </test> <!-- F:/PhysicianNetwork/PhysicianNetwork -->
  </suite> <!-- All Test Suite -->
</testng-results>
