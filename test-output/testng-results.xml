<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="10" total="16" passed="6">
  <reporter-output>
  </reporter-output>
  <suite name="All Test Suite" duration-ms="10775" started-at="2022-10-09T12:08:21 EET" finished-at="2022-10-09T12:08:32 EET">
    <groups>
    </groups>
    <test name="F:/PhysicianNetwork/PhysicianNetwork" duration-ms="10775" started-at="2022-10-09T12:08:21 EET" finished-at="2022-10-09T12:08:32 EET">
      <class name="Tests.Login.LoginWithInvalidEmailTest">
        <test-method status="PASS" signature="start()[pri:0, instance:Tests.Login.LoginWithInvalidEmailTest@6ebc05a6]" name="start" is-config="true" duration-ms="5390" started-at="2022-10-09T12:08:16 EET" finished-at="2022-10-09T12:08:21 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- start -->
        <test-method status="PASS" signature="userCanNotLoginWithInvalidEmail()[pri:0, instance:Tests.Login.LoginWithInvalidEmailTest@6ebc05a6]" name="userCanNotLoginWithInvalidEmail" duration-ms="838" started-at="2022-10-09T12:08:21 EET" finished-at="2022-10-09T12:08:22 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userCanNotLoginWithInvalidEmail -->
        <test-method status="PASS" signature="screenshotOnFailure(org.testng.ITestResult)[pri:0, instance:Tests.Login.LoginWithInvalidEmailTest@6ebc05a6]" name="screenshotOnFailure" is-config="true" duration-ms="2" started-at="2022-10-09T12:08:22 EET" finished-at="2022-10-09T12:08:22 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userCanNotLoginWithInvalidEmail status=SUCCESS method=LoginWithInvalidEmailTest.userCanNotLoginWithInvalidEmail()[pri:0, instance:Tests.Login.LoginWithInvalidEmailTest@6ebc05a6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotOnFailure -->
        <test-method status="PASS" signature="exit()[pri:0, instance:Tests.Login.LoginWithInvalidEmailTest@6ebc05a6]" name="exit" is-config="true" duration-ms="609" started-at="2022-10-09T12:08:32 EET" finished-at="2022-10-09T12:08:32 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- exit -->
      </class> <!-- Tests.Login.LoginWithInvalidEmailTest -->
      <class name="Tests.Registration.RegistrationWithExistedPhoneNumberTest">
        <test-method status="PASS" signature="userCanRegisterSuccessfully()[pri:0, instance:Tests.Registration.RegistrationWithExistedPhoneNumberTest@3b084709]" name="userCanRegisterSuccessfully" duration-ms="2951" started-at="2022-10-09T12:08:26 EET" finished-at="2022-10-09T12:08:29 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userCanRegisterSuccessfully -->
        <test-method status="PASS" signature="screenshotOnFailure(org.testng.ITestResult)[pri:0, instance:Tests.Registration.RegistrationWithExistedPhoneNumberTest@3b084709]" name="screenshotOnFailure" is-config="true" duration-ms="0" started-at="2022-10-09T12:08:29 EET" finished-at="2022-10-09T12:08:29 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userCanRegisterSuccessfully status=SUCCESS method=RegistrationWithExistedPhoneNumberTest.userCanRegisterSuccessfully()[pri:0, instance:Tests.Registration.RegistrationWithExistedPhoneNumberTest@3b084709] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotOnFailure -->
      </class> <!-- Tests.Registration.RegistrationWithExistedPhoneNumberTest -->
      <class name="Tests.Login.LoginWithInvalidPassTest">
        <test-method status="PASS" signature="userCanNotLoginWithInvalidEmail()[pri:0, instance:Tests.Login.LoginWithInvalidPassTest@cd2dae5]" name="userCanNotLoginWithInvalidEmail" duration-ms="441" started-at="2022-10-09T12:08:22 EET" finished-at="2022-10-09T12:08:22 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userCanNotLoginWithInvalidEmail -->
        <test-method status="PASS" signature="screenshotOnFailure(org.testng.ITestResult)[pri:0, instance:Tests.Login.LoginWithInvalidPassTest@cd2dae5]" name="screenshotOnFailure" is-config="true" duration-ms="1" started-at="2022-10-09T12:08:22 EET" finished-at="2022-10-09T12:08:22 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userCanNotLoginWithInvalidEmail status=SUCCESS method=LoginWithInvalidPassTest.userCanNotLoginWithInvalidEmail()[pri:0, instance:Tests.Login.LoginWithInvalidPassTest@cd2dae5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotOnFailure -->
      </class> <!-- Tests.Login.LoginWithInvalidPassTest -->
      <class name="Tests.Registration.RegistrationWithExistedEmailTest">
        <test-method status="PASS" signature="userCanRegisterSuccessfully()[pri:0, instance:Tests.Registration.RegistrationWithExistedEmailTest@57855c9a]" name="userCanRegisterSuccessfully" duration-ms="3573" started-at="2022-10-09T12:08:22 EET" finished-at="2022-10-09T12:08:26 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userCanRegisterSuccessfully -->
        <test-method status="PASS" signature="screenshotOnFailure(org.testng.ITestResult)[pri:0, instance:Tests.Registration.RegistrationWithExistedEmailTest@57855c9a]" name="screenshotOnFailure" is-config="true" duration-ms="0" started-at="2022-10-09T12:08:26 EET" finished-at="2022-10-09T12:08:26 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userCanRegisterSuccessfully status=SUCCESS method=RegistrationWithExistedEmailTest.userCanRegisterSuccessfully()[pri:0, instance:Tests.Registration.RegistrationWithExistedEmailTest@57855c9a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotOnFailure -->
      </class> <!-- Tests.Registration.RegistrationWithExistedEmailTest -->
      <class name="Tests.Registration.RegistrationSuccessfullyTest">
        <test-method status="PASS" signature="userCanRegisterSuccessfully()[pri:0, instance:Tests.Registration.RegistrationSuccessfullyTest@3224f60b]" name="userCanRegisterSuccessfully" duration-ms="2786" started-at="2022-10-09T12:08:29 EET" finished-at="2022-10-09T12:08:32 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userCanRegisterSuccessfully -->
        <test-method status="PASS" signature="screenshotOnFailure(org.testng.ITestResult)[pri:0, instance:Tests.Registration.RegistrationSuccessfullyTest@3224f60b]" name="screenshotOnFailure" is-config="true" duration-ms="1" started-at="2022-10-09T12:08:32 EET" finished-at="2022-10-09T12:08:32 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userCanRegisterSuccessfully status=SUCCESS method=RegistrationSuccessfullyTest.userCanRegisterSuccessfully()[pri:0, instance:Tests.Registration.RegistrationSuccessfullyTest@3224f60b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotOnFailure -->
      </class> <!-- Tests.Registration.RegistrationSuccessfullyTest -->
      <class name="Tests.Login.LoginSuccessfullyTest">
        <test-method status="PASS" signature="userCanLoginWithValidEmailAndPassword()[pri:0, instance:Tests.Login.LoginSuccessfullyTest@63e2203c]" name="userCanLoginWithValidEmailAndPassword" duration-ms="158" started-at="2022-10-09T12:08:32 EET" finished-at="2022-10-09T12:08:32 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userCanLoginWithValidEmailAndPassword -->
        <test-method status="PASS" signature="screenshotOnFailure(org.testng.ITestResult)[pri:0, instance:Tests.Login.LoginSuccessfullyTest@63e2203c]" name="screenshotOnFailure" is-config="true" duration-ms="0" started-at="2022-10-09T12:08:32 EET" finished-at="2022-10-09T12:08:32 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userCanLoginWithValidEmailAndPassword status=SUCCESS method=LoginSuccessfullyTest.userCanLoginWithValidEmailAndPassword()[pri:0, instance:Tests.Login.LoginSuccessfullyTest@63e2203c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotOnFailure -->
      </class> <!-- Tests.Login.LoginSuccessfullyTest -->
    </test> <!-- F:/PhysicianNetwork/PhysicianNetwork -->
  </suite> <!-- All Test Suite -->
</testng-results>
